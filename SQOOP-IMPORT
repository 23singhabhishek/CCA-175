
--https://github.com/dgadiraju/code/blob/a01c909e382ae7da5077486536d58b677c24469f/hadoop/edw/cloudera/sqoop/sqoop_demo.txt



sqoop list-databases \
--connect 'jdbc:mysql://quickstart.cloudera:3306' \
--username retail_dba \
--password cloudera

sqoop list-tables \
--connect 'jdbc:mysql://quickstart.cloudera:3306/retail_db' \
--username retail_dba \
--password cloudera 

****************************************************************************************************************************************

sqoop eval \
--connect 'jdbc:mysql://quickstart.cloudera:3306/retail_db' \
--username retail_dba \
--password cloudera \
--query 'select * from retail_db.departments'


sqoop eval \
--connect 'jdbc:mysql://quickstart.cloudera:3306/retail_db' \
--username retail_db \
--password cloudera \
--query 'select count(1) from retail_db.departments'


****************************************************************************************************************************************

--table <table-name>	Table to read
===================================
--target-dir <dir>	HDFS destination dir
========================================
sqoop import \
--connect 'jdbc:mysql://quickstart.cloudera:3306/retail_db' \
--username retail_db \
--password cloudera \
--table departments \
--target-dir=/user/cloudera/sqoop/sqoop-import/default

P.S: Do not create the folder 'default' before executing the command

--as-textfile	      Imports data as plain text (default)
=======================================================
sqoop import \
--connect 'jdbc:mysql://quickstart.cloudera:3306/retail_db' \
--username retail_db \
--password cloudera \
--table departments \
--as-textfile \
--target-dir=/user/cloudera/sqoop/sqoop-import/txtfil

P.S: Do not create the folder 'txtfil' before executing the command

--as-avrodatafile	  Imports data to Avro Data Files
===================================================
sqoop import \
--connect 'jdbc:mysql://quickstart.cloudera:3306/retail_db' \
--username retail_db \
--password cloudera \
--table departments \
--as-avrodatafile \
--target-dir=/user/cloudera/sqoop/sqoop-import/avrfil

P.S: Do not create the folder 'avrfil' before executing the command

--as-sequencefile	  Imports data to SequenceFiles
=================================================
sqoop import \
--connect 'jdbc:mysql://quickstart.cloudera:3306/retail_db' \
--username retail_db \
--password cloudera \
--table departments \
--as-sequencefile \
--target-dir=/user/cloudera/sqoop/sqoop-import/seqfil

P.S: Do not create the folder 'seqfil' before executing the command

--as-parquetfile	  Imports data to Parquet Files
=================================================
sqoop import \
--connect 'jdbc:mysql://quickstart.cloudera:3306/retail_db' \
--username retail_db \
--password cloudera \
--table departments \
--as-parquetfile \
--target-dir /user/cloudera/sqoop/sqoopprq/prqfil

P.S: Do not create the folder 'prqfil' before executing the command
Target directory should not have any special characters in the name

********************************************************************************************************************************

If the target directory exists, then add the option --delete-target-dir in the import statement.
================================================================================================

sqoop import \
--connect 'jdbc:mysql://quickstart.cloudera:3306/retail_db' \
--username retail_db \
--password cloudera \
--table departments \
--as-sequencefile \
--target-dir=/user/cloudera/sqoop/sqoop-import/seqfil
--delete-target-dir


********************************************************************************************************************************
-m,--num-mappers <n>	Use n map tasks to import in parallel
===========================================================
Default mappers = 4. Hence 4 files are created in the target directory.
sqoop import \
--connect 'jdbc:mysql://quickstart.cloudera:3306/retail_db' \
--username retail_db \
--password cloudera \
--table departments \
--target-dir=/user/cloudera/sqoop/sqoop-import/default
--delete-target-dir
--m 2

-rw-r--r--   1 cloudera cloudera          0 2016-12-28 23:21 /user/cloudera/sqoop/sqoop-import/default/_SUCCESS
-rw-r--r--   1 cloudera cloudera    2647040 2016-12-28 23:21 /user/cloudera/sqoop/sqoop-import/default/part-m-00000
-rw-r--r--   1 cloudera cloudera    2761840 2016-12-28 23:21 /user/cloudera/sqoop/sqoop-import/default/part-m-00001

********************************************************************************************************************************
--append	          Append data to an existing dataset in 
=========================================================

sqoop import \
--connect 'jdbc:mysql://quickstart.cloudera:3306/retail_db' \
--username retail_db \
--password cloudera \
--table departments \
--target-dir=/user/cloudera/sqoop/sqoop-import/default \
--m 2 \
--append


Found 5 items
-rw-r--r--   1 cloudera cloudera          0 2016-12-28 23:21 /user/cloudera/sqoop/sqoop-import/default/_SUCCESS
-rw-r--r--   1 cloudera cloudera    2647040 2016-12-28 23:21 /user/cloudera/sqoop/sqoop-import/default/part-m-00000
-rw-r--r--   1 cloudera cloudera    2761840 2016-12-28 23:21 /user/cloudera/sqoop/sqoop-import/default/part-m-00001
-rw-r--r--   1 cloudera cloudera    2647040 2016-12-28 23:35 /user/cloudera/sqoop/sqoop-import/default/part-m-00002
-rw-r--r--   1 cloudera cloudera    2761840 2016-12-28 23:35 /user/cloudera/sqoop/sqoop-import/default/part-m-00003


********************************************************************************************************************************
-e,--query <statement>	Import the results of statement.
=========================================================
--split-by <column-name>	Column of the table used to split work units. Cannot be used with --autoreset-to-one-mapper option.
=========================================================

sqoop import \
--connect 'jdbc:mysql://quickstart.cloudera:3306/retail_db' \
--username retail_dba \
--password cloudera \
--target-dir /user/cloudera/sqoop/sqoop-import/query \
--e 'select order_item_order_id, sum(order_item_subtotal) from retail_db.order_items \
 WHERE $CONDITIONS \
 group by order_item_order_id' \
 --split-by order_item_order_id \
 --delete-target-dir
 
 Found 5 items
-rw-r--r--   1 cloudera cloudera          0 2016-12-29 00:24 /user/cloudera/sqoop/sqoop-import/query/_SUCCESS
-rw-r--r--   1 cloudera cloudera     314751 2016-12-29 00:24 /user/cloudera/sqoop/sqoop-import/query/part-m-00000
-rw-r--r--   1 cloudera cloudera     324255 2016-12-29 00:24 /user/cloudera/sqoop/sqoop-import/query/part-m-00001
-rw-r--r--   1 cloudera cloudera     322985 2016-12-29 00:24 /user/cloudera/sqoop/sqoop-import/query/part-m-00002
-rw-r--r--   1 cloudera cloudera     324405 2016-12-29 00:24 /user/cloudera/sqoop/sqoop-import/query/part-m-00003

********************************************************************************************************************************
-e,--query <statement>	Import the results of statement.
=========================================================
--split-by <column-name>	Column of the table used to split work units. Cannot be used with --autoreset-to-one-mapper option.
=========================================================
--where <where clause>	WHERE clause to use during import
========================================================

sqoop import \
--connect 'jdbc:mysql://quickstart.cloudera:3306/retail_db' \
--username retail_dba \
--password cloudera \
--e "select * from departments WHERE /$CONDITIONS and department_name like '%o%'" \
--target-dir /user/cloudera/sqoop/sqoop-import/cond
--split-by department_id


********************************************************************************************************************************

--columns <col,col,col…>	Columns to import from table
=====================================================

sqoop import \
--connect 'jdbc:mysql://quickstart:3306/retail_db'  \
--username retail_dba \
--password cloudera \
--table customers  \
--columns 'customer_id, customer_fname, customer_lname, customer_state, customer_zipcode'  \
--target-dir /user/cloudera/sqoop/sqoop-import/impcols

Found 5 items
-rw-r--r--   1 cloudera cloudera          0 2016-12-29 07:10 /user/cloudera/sqoop/sqoop-import/impcols/_SUCCESS
-rw-r--r--   1 cloudera cloudera      82611 2016-12-29 07:10 /user/cloudera/sqoop/sqoop-import/impcols/part-m-00000
-rw-r--r--   1 cloudera cloudera      83780 2016-12-29 07:10 /user/cloudera/sqoop/sqoop-import/impcols/part-m-00001
-rw-r--r--   1 cloudera cloudera      83644 2016-12-29 07:10 /user/cloudera/sqoop/sqoop-import/impcols/part-m-00002
-rw-r--r--   1 cloudera cloudera      86031 2016-12-29 07:10 /user/cloudera/sqoop/sqoop-import/impcols/part-m-00003

********************************************************************************************************************************
--columns <col,col,col…>	Columns to import from table
====================================================
-z,--compress	Enable compression
================================

sqoop import \
--connect 'jdbc:mysql://quickstart:3306/retail_db'  \
--username retail_dba \
--password cloudera \
--table customers  \
--columns 'customer_id, customer_fname, customer_lname, customer_state, customer_zipcode'  \
--target-dir /user/cloudera/sqoop/sqoop-import/impcolsz \
--z 

Found 5 items
-rw-r--r--   1 cloudera cloudera          0 2016-12-29 07:14 /user/cloudera/sqoop/sqoop-import/impcolsz/_SUCCESS
-rw-r--r--   1 cloudera cloudera      27510 2016-12-29 07:14 /user/cloudera/sqoop/sqoop-import/impcolsz/part-m-00000.gz
-rw-r--r--   1 cloudera cloudera      27592 2016-12-29 07:14 /user/cloudera/sqoop/sqoop-import/impcolsz/part-m-00001.gz
-rw-r--r--   1 cloudera cloudera      27681 2016-12-29 07:14 /user/cloudera/sqoop/sqoop-import/impcolsz/part-m-00002.gz
-rw-r--r--   1 cloudera cloudera      27687 2016-12-29 07:14 /user/cloudera/sqoop/sqoop-import/impcolsz/part-m-00003.gz


********************************************************************************************************************************

--boundary-query <statement>	Boundary query to use for creating splits
======================================================================

sqoop import  \
--connect 'jdbc:mysql://quickstart.cloudera:3306/retail_db'  \
--username retail_dba \
--password cloudera \
--table order_items  \
--target-dir /user/cloudera/sqoop/sqoop-import/bound  \
--boundary-query 
****************************************************************************/****************************************************

--autoreset-to-one-mapper	Import should use one mapper if a table has no primary key and no split-by column is provided. 
=========================================================================================================================
Cannot be used with --split-by <col> option
==========================================

sqoop import \
--connect 'jdbc:mysql://quickstart.cloudera:3306:3306/retail_db' \
--username retail_dba  \
--password cloudera \
--table order_items \
--autoreset-to-one-mapper
--target-dir user/cloudera/sqoop/sqoop-import/onemap


********************************************************************************************************************************
aggregate function
==================

sqoop import \
--connect 'jdbc:mysql://quickstart.cloudera:3306/retail_db' \
--username retail_dba \
--password cloudera \
--target-dir /user/cloudera/sqoop/sqoop-import/query \
--e 'select order_item_order_id, sum(order_item_subtotal) from retail_db.order_items \
 WHERE $CONDITIONS \
 group by order_item_order_id' \
 --split-by order_item_order_id \
 --delete-target-dir
 
 

********************************************************************************************************************************



********************************************************************************************************************************
********************************************************************************************************************************
********************************************************************************************************************************
********************************************************************************************************************************

*********************************
import-all





Table 3. Import control arguments:

Argument	          Description




--direct	Use direct connector if exists for the database
--fetch-size <n>	Number of entries to read from database at once.
--inline-lob-limit <n>	Set the maximum size for an inline LOB



.
--warehouse-dir <dir>	HDFS parent for table destination


--compression-codec <c>	Use Hadoop codec (default gzip)
--null-string <null-string>	The string to be written for a null value for string columns
--null-non-string <null-string>	The string to be written for a null value for non-string columns




hdfs dfs -tail /filepath  --> displays the last 1 kb of the file
hdfs dfs -cat /filepath  --> displays the contents of the file
hdfs dfs -cat /filepath |head --> first 10 lines
hdfs dfs -cat /filepath |tail --> last 10 lines



